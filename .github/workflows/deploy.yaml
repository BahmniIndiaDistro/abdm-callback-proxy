name: Deploy

on:
  push:
    branches:
      - main
      - BAH-2192
jobs:
  get-version:
    #This job reads the .baseversion file and checks it against tags in the repo so that overlap builds don't occur.
    #Also provides version as output for other jobs.
    name: Get Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set Version Output
        id: get-version
        run: |
          VERSION=$(cat .baseversion)
          if [ $(git tag -l "$VERSION") ]; then
            echo "Version $VERSION already released. Please update your version in package/.baseversion"
            exit 1
          else
            echo "Setting version $VERSION"
            echo ::set-output name=version::$VERSION
          fi

  build:
    runs-on: ubuntu-latest
    env:
      ARTIFACT_VERSION: ${{ needs.get-version.outputs.version }}-${{github.run_number}}
      HELM_CHART_PATH: package/helm/
      CLUSTER_NAME: bahmni-cluster-nonprod
      PROXY_DNS: abdm-proxy.lite.mybahmni.in
    steps:
      - uses: actions/checkout@v2
      - name: install and build
        run: yarn install
      - run: yarn build
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: package/docker/Dockerfile
          push: true
          tags: bahmniindiadistro/abdm-callback-proxy:${{ env.ARTIFACT_VERSION }},bahmniindiadistro/abdm-callback-proxy:latest

      - name: Helm - Update Version and Image Tag
        run: |
          yq --inplace '.image.tag = "${{ env.ARTIFACT_VERSION }}"' $HELM_CHART_PATH/values.yaml
          yq --inplace '.version = "${{ env.ARTIFACT_VERSION }}"' $HELM_CHART_PATH/Chart.yaml

      - name: Helm Lint
        run: helm lint $HELM_CHART_PATH

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BAHMNI_AWS_ID }}
          aws-secret-access-key: ${{ secrets.BAHMNI_AWS_SECRET }}
          aws-region: ${{ secrets.BAHMNI_AWS_REGION }}
          role-to-assume: ${{ secrets.BAHMNI_INFRA_ADMIN_ROLE }}
          role-duration-seconds: 900 # 15 mins
          role-session-name: BahmniInfraAdminSession
      - name: Authorise Kubectl with EKS
        run: aws eks update-kubeconfig --name $CLUSTER_NAME

      - name: Upsert Route53 A record with INGRESS_DNS
        run: |
          INGRESS_DNS=$(kubectl -n ingress-nginx  get svc ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[0].hostname}")
          jq --arg ingress_dns "$INGRESS_DNS" \
          --arg environment_dns "$PROXY_DNS" \
          '.Changes[].ResourceRecordSet.AliasTarget.DNSName = $ingress_dns | .Changes[0].ResourceRecordSet.Name = $environment_dns' \
          package/route53.json > recordset
          aws route53 change-resource-record-sets --hosted-zone-id ${{ secrets.HOSTED_ZONE_ID }} --change-batch file://recordset

      - name: Helm Upgrade
        run: |
          helm upgrade abdm-callback-proxy package/helm --install
